plugins {
    id("net.neoforged.moddev")
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    // Specify the version of NeoForge to use.
    version = project.neo_version

    runs {
        configureEach {
            systemProperty 'forge.logging.markers', 'REGISTRIES'
            logLevel = org.slf4j.event.Level.DEBUG
        }

        create("client") {
            client()
        }

        create("server") {
            server()
        }
    }

    mods {
        create("numina") {
            dependency(project(":numina"))
        }

//        create("powersuits") {
//            sourceSet(project(":powersuits").sourceSets["main"])
//        }
//
//        create("mpswhatever") {
//            sourceSet(project(":mpswhatever").sourceSets["main"])
//        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

// Sets up a dependency configuration called 'localRuntime'.
// This configuration should be used instead of 'runtimeOnly' to declare
// a dependency that will be present for runtime testing but that is
// "optional", meaning it will not be pulled by dependents of this mod.
configurations {
    runtimeClasspath.extendsFrom localRuntime
}

dependencies {
//    jarJar(project(":powersuits"))
//    jarJar(project(":mpswhatever"))
//    implementation(project(":powersuits"))
//    implementation(project(":mpswhatever"))
    // TODO ...
}