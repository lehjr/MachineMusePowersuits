@Grab('net.neoforged:moddev')
@Grab('com.enderio:Regilite')
@Grab('mezz.jei:jei-common-api')
@Grab('mezz.jei:jei-neoforge-api')
@Grab('mezz.jei:jei-common')
@Grab('mezz.jei:jei-neoforge')

import java.text.SimpleDateFormat
        import java.util.*

        plugins {
            id 'net.neoforged.moddev'
        }

def minecraftVersion = project.property('minecraftVersion')
def neoForgeVersion = project.property('neoForgeVersion')

apply from: rootProject.file('buildSrc/shared.gradle')

// Mojang ships Java 21 to end users in 1.20.5+, so your mod should target Java 21.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/generated/resources'
        }
    }
}

def regiliteVersion = project.property('regiliteVersion')
def jeiMinecraftVersion = project.property('jeiMinecraftVersion')
def jeiVersion = project.property('jeiVersion')

dependencies {
    implementation "com.enderio:Regilite:$regiliteVersion"
    jarJar "com.enderio:Regilite:$regiliteVersion"

    compileOnly project(':ensure_plugin')
    implementation project(':endercore')
    jarJar project(':endercore')

    // JEI
    compileOnly "mezz.jei:jei-${jeiMinecraftVersion}-common-api:$jeiVersion"
    compileOnly "mezz.jei:jei-${jeiMinecraftVersion}-neoforge-api:$jeiVersion"
    runtimeOnly "mezz.jei:jei-${jeiMinecraftVersion}-common:$jeiVersion"
    runtimeOnly "mezz.jei:jei-${jeiMinecraftVersion}-neoforge:$jeiVersion"
}

neoForge {
    version = neoForgeVersion

    accessTransformers {
        publish(project.file('src/main/resources/META-INF/accesstransformer.cfg'))
    }

    runs {
        configureEach {
            logLevel = org.slf4j.event.Level.INFO
        }

        client {
            client()
        }

        data {
            data()

            programArguments.addAll(
                    '--mod', 'powersuits',
                    '--all',
                    '--output', file('src/generated/resources').absolutePath,
                    '--existing', file('src/main/resources').absolutePath,
                    "--existing", file("../numina/src/main/resources").absolutePath,
                    "--existing", file("../numina/src/generated/resources").absolutePath,
            )
        }

        server {
            server()
        }
    }

    mods {
        create("mps") {
            sourceSet(project(":enderio-base").sourceSets["main"])
        }

        numina {
            dependency(project(':numina'))
        }

        powersuits {
            sourceSet(sourceSets.main)
        }
    }

    neoFormRuntime {
        // verbose = true
    }
}

tasks.withType(Jar) {
    manifest {
        attributes(
                'Specification-Title': 'Ender IO',
        'Specification-Vendor': 'Team Ender IO',
        'Specification-Version': '1',
        'Implementation-Title': project.name,
        'Implementation-Version': project.version,
        'Implementation-Vendor': 'Team Ender IO',
        'Implementation-Timestamp': new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ssZ").format(new Date()),
        'MixinConfigs': 'enderiobase.mixins.json'
        )
    }
}

