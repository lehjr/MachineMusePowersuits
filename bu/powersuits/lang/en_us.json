//{
//  add(MPSBlocks.LUX_CAPACITOR_BLOCK.get(), "Lux Capacitor",
//  add(MPSBlocks.TINKER_TABLE_BLOCK.get(), "Power Armor Tinker Table",
//  add(MPSConstants.GUI_SHOW_ON_HUD, "Install/Salvage",
//  add(MPSConstants.GUI_INSTALLED_MODULES,  "Installed Modules",
//  add(MPSConstants.GUI_MODULAR_ITEM_INVENTORY, "Modular Item Inventory",
//  add(MPSConstants.GUI_SHOW_ON_HUD, "Show on HUD:",
//  add(MPSConstants.GUI_KEYBINDS, "Keybinds",
//  add(MPSConstants.GUI_MODULE_TWEAK, "Module Tweak",
//  add(MPSConstants.GUI_VISUAL, "Visual",
//  add(MPSConstants.GUI_TINKER_TABLE, "Tinker",
//  add(MPSItems.AQUA_AFFINITY_MODULE.get(), "Aqua Affinity",
//  addItemDescriptions(MPSItems.AQUA_AFFINITY_MODULE.get(), "Reduces the speed penalty for using your tool underwater.",
//  add(MPSItems.AUTO_FEEDER_MODULE.get(), "Auto-Feeder",
//  addItemDescriptions(MPSItems.AUTO_FEEDER_MODULE.get(), "Whenever you're hungry, this module will grab the bottom-left-most food item from your inventory and feed it to you, storing the rest for later.",
//  add(MPSItems.AXE_MODULE.get(), "Axe",
//  addItemDescriptions(MPSItems.AXE_MODULE.get(), "Axes are mostly for chopping trees.",
//  add(MPSItems.BINOCULARS_MODULE.get(), "Binoculars",
//  addItemDescriptions(MPSItems.BINOCULARS_MODULE.get(),  "With the problems that have been plaguing Optifine lately, you've decided to take that Zoom ability into your own hands.",
//  add(MPSItems.BLADE_LAUNCHER_MODULE.get(), "Blade Launcher",
//  addItemDescriptions(MPSItems.BLADE_LAUNCHER_MODULE.get(), "Launches a spinning blade of death (or shearing).",
//  add(MPSItems.BLINK_DRIVE_MODULE.get(), "Blink Drive",
//  addItemDescriptions(MPSItems.BLINK_DRIVE_MODULE.get(), "Get from point A to point C via point B, where point B is a fold in space & time.",
//  add(MPSItems.CLIMB_ASSIST_MODULE.get(), "Uphill Step Assist",
//  addItemDescriptions(MPSItems.CLIMB_ASSIST_MODULE.get(), "A pair of dedicated servos allow you to effortlessly step up 1m-high ledges.",
//  add(MPSItems.COOLING_SYSTEM_MODULE.get(), "Cooling System",
//  addItemDescriptions(MPSItems.COOLING_SYSTEM_MODULE.get(), "Cools down heat-producing modules quicker. Add a fluid tank module and fluid to enhance performance.",
//  add(MPSItems.DIAMOND_PICK_UPGRADE_MODULE.get(), "Diamond Drill Upgrade",
//  addItemDescriptions(MPSItems.DIAMOND_PICK_UPGRADE_MODULE.get(), "Add diamonds to allow your pickaxe module to mine Obsidian. *REQUIRES PICKAXE MODULE TO WORK*",
//  add(MPSItems.DIMENSIONAL_RIFT_MODULE.get(), "Dimensional Tear Generator",
//  addItemDescriptions(MPSItems.DIMENSIONAL_RIFT_MODULE.get(), "Generate a tear in the space-time continuum that will teleport the player to its relative coordinates in the nether or overworld.",
//  add(MPSItems.ENERGY_SHIELD_MODULE.get(), "Energy Shield",
//  addItemDescriptions(MPSItems.ENERGY_SHIELD_MODULE.get(), "Energy shields are much lighter than plating, but consume energy.",
//  add(MPSItems.FLIGHT_CONTROL_MODULE.get(), "Flight Control",
//  addItemDescriptions(MPSItems.FLIGHT_CONTROL_MODULE.get(), "An integrated control circuit to help you fly better. Press Z to go down.",
//  add(MPSItems.FLINT_AND_STEEL_MODULE.get(), "Flint and Steel",
//  addItemDescriptions(MPSItems.FLINT_AND_STEEL_MODULE.get(),"A portable igniter that creates fire through the power of energy.",
//  add(MPSItems.FLUID_TANK_MODULE.get(), "Fluid Tank",
//  addItemDescriptions(MPSItems.FLUID_TANK_MODULE.get(), "Stores fluid to enhance the performance of the cooling system.",
//  add(MPSItems.FORTUNE_MODULE.get(), "Fortune Enchantment",
//  addItemDescriptions(MPSItems.FORTUNE_MODULE.get(), "A module that provides the fortune enchantment.",
//  add(MPSItems.KINETIC_GENERATOR_MODULE.get(), "Kinetic Generator",
//  addItemDescriptions(MPSItems.KINETIC_GENERATOR_MODULE.get(), "Generate power with your movement.",
//  add(MPSItems.SOLAR_GENERATOR_MODULE.get(), "Solar Generator",
//  addItemDescriptions(MPSItems.SOLAR_GENERATOR_MODULE.get(), "Let the sun power your adventures.",
//  add(MPSItems.ADVANCED_SOLAR_GENERATOR_MODULE.get(), "High Efficiency Solar Generator",
//  addItemDescriptions(MPSItems.ADVANCED_SOLAR_GENERATOR_MODULE.get(), "A solar generator with 3 times the power generation of the standard solar generator.",
//  add(MPSItems.THERMAL_GENERATOR_MODULE.get(), "Thermal Generator",
//  addItemDescriptions(MPSItems.THERMAL_GENERATOR_MODULE.get(), "Generate power from extreme amounts of heat.",
//  add(MPSItems.GLIDER_MODULE.get(), "Glider",
//  addItemDescriptions(MPSItems.GLIDER_MODULE.get(), "Tack on some wings to turn downward into forward momentum. Press sneak+forward while falling to activate.",
//  add(MPSItems.HOE_MODULE.get(), "Rototiller",
//  addItemDescriptions(MPSItems.HOE_MODULE.get(), "An automated tilling addon to make it easy to till large swaths of land at once.",
//  add(MPSItems.JETBOOTS_MODULE.get(), "Jet Boots",
//  addItemDescriptions(MPSItems.JETBOOTS_MODULE.get(), "Jet boots are not as strong as a jetpack, but they should at least be strong enough to counteract gravity.",
//  add(MPSItems.JETPACK_MODULE.get(), "Jetpack",
//  addItemDescriptions(MPSItems.JETPACK_MODULE.get(), "A jetpack should allow you to jump indefinitely, or at least until you run out of power.",
//  add(MPSItems.JUMP_ASSIST_MODULE.get(), "Jump Assist",
//  addItemDescriptions(MPSItems.JUMP_ASSIST_MODULE.get(), "Another set of servo motors to help you jump higher.",
//  add(MPSItems.LEAF_BLOWER_MODULE.get(), "Leaf Blower",
//  addItemDescriptions(MPSItems.LEAF_BLOWER_MODULE.get(), "Create a torrent of air to knock plants out of the ground and leaves off of trees.",
//  add(MPSItems.LIGHTNING_MODULE.get(), "Lightning Summoner",
//  addItemDescriptions(MPSItems.LIGHTNING_MODULE.get(), "Allows you to summon lightning for a large energy cost.",
//  add(MPSItems.LUX_CAPACITOR_MODULE.get(), "Lux Capacitor",
//  addItemDescriptions(MPSItems.LUX_CAPACITOR_MODULE.get(), "Launch a virtually infinite number of attractive light sources at the wall.",
//  add(MPSItems.MAGNET_MODULE.get(), "Magnet",
//  addItemDescriptions(MPSItems.MAGNET_MODULE.get(), "Generates a magnetic field strong enough to attract items towards the player.         WARNING:                   This module drains power continuously. Turn it off when not needed.",
//  add(MPSItems.MELEE_ASSIST_MODULE.get(), "Melee Assist",
//  addItemDescriptions(MPSItems.MELEE_ASSIST_MODULE.get(), "A much simpler addon, makes your powertool punches hit harder.",
//  add(MPSItems.MOB_REPULSOR_MODULE.get(), "Mob Repulsor",
//  addItemDescriptions(MPSItems.MOB_REPULSOR_MODULE.get(), "Pushes mobs away from you when activated, but constantly drains power. It is highly recommended that you set this module to a keybind because of the high energy draw.",
//  add(MPSItems.NIGHT_VISION_MODULE.get(), "Night Vision",
//  addItemDescriptions(MPSItems.NIGHT_VISION_MODULE.get(), "A pair of augmented vision goggles to help you see at night and underwater.",
//  add(MPSItems.PARACHUTE_MODULE.get(), "Parachute",
//  addItemDescriptions(MPSItems.PARACHUTE_MODULE.get(), "Add a parachute to slow your descent. Activate by pressing sneak (defaults to Shift) in midair.",
//  add(MPSItems.PICKAXE_MODULE.get(), "Pickaxe",
//  addItemDescriptions(MPSItems.PICKAXE_MODULE.get(), "Picks are good for harder materials like stone and ore.",
//  add(MPSItems.PIGLIN_PACIFICATION_MODULE.get(), "Piglin Pacification Module",
//  addItemDescriptions(MPSItems.PIGLIN_PACIFICATION_MODULE.get(), "Simple module to make Piglins neutral as if wearing gold armor",
//  add(MPSItems.PLASMA_CANNON_MODULE.get(), "Plasma Cannon",
//  addItemDescriptions(MPSItems.PLASMA_CANNON_MODULE.get(), "Use electrical arcs in a containment field to superheat air to a plasma and launch it at enemies.",
//  add(MPSItems.DIAMOND_PLATING_MODULE.get(), "Diamond Plating",
//  addItemDescriptions(MPSItems.DIAMOND_PLATING_MODULE.get(), "Diamond Plating is harder and more expensive to make, but offers better protection.",
//  add(MPSItems.IRON_PLATING_MODULE.get(), "Iron Plating",
//  addItemDescriptions(MPSItems.IRON_PLATING_MODULE.get(), "Iron plating is heavy but offers a bit more protection.",
//  add(MPSItems.NETHERITE_PLATING_MODULE.get(), "Netherite Plating",
//  addItemDescriptions(MPSItems.NETHERITE_PLATING_MODULE.get(), "Armor plating made from Netherite",
//  add(MPSItems.POWER_ARMOR_BOOTS.get(), "Power Armor Boots",
//  add(MPSItems.POWER_ARMOR_HELMET.get(), "Power Armor Helmet",
//  add(MPSItems.POWER_ARMOR_LEGGINGS.get(), "Power Armor Leggings",
//  add(MPSItems.POWER_ARMOR_CHESTPLATE.get(), "Power Armor Chestplate",
//  add(MPSItems.POWER_FIST.get(), "Power Fist",
//  add(MPSItems.RAILGUN_MODULE.get(), "Railgun",
//  addItemDescriptions(MPSItems.RAILGUN_MODULE.get(), "An assembly which accelerates a projectile to supersonic speeds using magnetic force. Heavy recoil.",
//  add(MPSItems.SELECTIVE_MINER.get(), "Selective Miner",
//  addItemDescriptions(MPSItems.SELECTIVE_MINER.get(), "Breaks blocks similar to the vein miner, but selectively. Shift and click to select block type.",
//  add(MPSItems.SHEARS_MODULE.get(), "Shears",
//  addItemDescriptions(MPSItems.SHEARS_MODULE.get(), "Cuts through leaves, wool, and creepers alike.",
//  add(MPSItems.SHOCK_ABSORBER_MODULE.get(), "Shock Absorber",
//  addItemDescriptions(MPSItems.SHOCK_ABSORBER_MODULE.get(), "With some servos, springs, and padding, you should be able to negate a portion of fall damage.",
//  add(MPSItems.SHOVEL_MODULE.get(), "Shovel",
//  addItemDescriptions(MPSItems.SHOVEL_MODULE.get(), "Shovels are good for soft materials like dirt and sand.",
//  add(MPSItems.SILK_TOUCH_MODULE.get(), "Silk Touch Enchantment",
//  addItemDescriptions(MPSItems.SILK_TOUCH_MODULE.get(), "A module that provides the Silk Touch enchantment",
//  add(MPSItems.SPRINT_ASSIST_MODULE.get(), "Sprint Assist",
//  addItemDescriptions(MPSItems.SWIM_BOOST_MODULE.get(), "A set of servo motors to help you sprint (double-tap forward) and walk faster.",
//  add(MPSItems.SWIM_BOOST_MODULE.get(), "Swim Boost",
//  addItemDescriptions(MPSItems.SWIM_BOOST_MODULE.get(), "By refitting an ion thruster for underwater use, you may be able to add extra forward (or backward) thrust when underwater.",
//  add(MPSItems.TUNNEL_BORE_MODULE.get(), "Tunnel Bore",
//  addItemDescriptions(MPSItems.TUNNEL_BORE_MODULE.get(), "A module that enables the pickaxe module to mine 5x5 range blocks simultaneously.",
//  add(MPSItems.VEIN_MINER_MODULE.get(), "Vein Miner",
//  addItemDescriptions(MPSItems.VEIN_MINER_MODULE.get(), "A module for mining ore veins",
//  add(MPSItems.WATER_ELECTROLYZER_MODULE.get(), "Water Electrolyzer",
//  addItemDescriptions(MPSItems.WATER_ELECTROLYZER_MODULE.get(), "When you run out of air, this module will jolt the water around you, electrolyzing a small bubble to breathe from.",
//  addJavaModelPart("chest", "Body", "Body",
//  addJavaModelPart("chest", "LeftArm", "LeftArm",
//  addJavaModelPart("chest", "RightArm", "RightArm",
//  addJavaModelPart("", "chest", "Chest",
//  "javaModel.citizenjoe_armorskin.specName": "Citizen Joe Armor Skin",
//  "javaModel.default_armorskin.specName": "Default Armor Skin",
//  addJavaModelPart("feet", "LeftFoot", "LeftFoot",
//   addJavaModelPart("feet", "RightFoot", "RightFoot",
//  addJavaModelPart("", "feet", "Feet",
//  addJavaModelPart("head", "Head", "Head",
//  addJavaModelPart("legs", "LeftLeg","LeftLeg",
//  addJavaModelPart("legs", "RightLeg", "RightLeg",
//  "javaModel.legs.partName": "Legs",
//  addPowerfistPart("armorleft", "Armor Left",
//  addPowerfistPart("armorright", "Armor Right",
//  addPowerfistPart("crystal", "Crystal",
//  addPowerfistPart("crystalholder", "Crystal Holder",
//  addPowerfistPart("fingerguard", "Finger Guard",
//  addPowerfistPart("mainarm", "Main Arm",
//  addPowerfistPart("palm.index1.index2", "Index 2",
//  addPowerfistPart("palm.index1",  "Index 1",
//  addPowerfistPart("palm.middlefinger1.middlefinger2", "Middle Finger 2",
//  addPowerfistPart("palm.middlefinger1", "Middle Finger 1",
//  addPowerfistPart("palm", "Palm",
//  addPowerfistPart("palm.pinky1", "Pinky 1",
//  addPowerfistPart("palm.pinky1.pinky2", "Pinky 2",
//  addPowerfistPart("palm.ringfinger1", "Ring Finger 1",
//  addPowerfistPart("palm.ringfinger1.ringfinger2", "Ring Finger 2",
//  addPowerfistPart("palm.thumb1", "Thumb 1",
//  addPowerfistPart("palm.thumb1.thumb2", "Thumb 2",
//  addPowerfistPart("armorleft", "Power Fist",
//  addPowerfistPart("supportbaseleft", "Support Base Left",
// addPowerfistPart("supportbaseright", "Support Base Right",
//  addPowerfistPart("supportleft1", "Support Left 1",
//  addPowerfistPart("supportleft2", "Support Left 2",
//  addPowerfistPart("supportleft3", "Support Left 3",
//  addPowerfistPart("supportleft4", "Support Left 4",
//  addPowerfistPart("supportleft5", "Support Left 5",
//  addPowerfistPart("supportleftfront", "Support Left Front",
//  addPowerfistPart("supportright1", "Support Right 1",
//  addPowerfistPart("supportright2", "Support Right 2",
//  addPowerfistPart("supportright3", "Support Right 3",
//  addPowerfistPart("supportright4", "Support Right 4",
//  addPowerfistPart("supportright5", "Support Right 5",
//  addPowerfistPart("supportrightfront", "Support Right Front",
//  addPowerfistPart("wristbottomleft", "Wrist Bottom Left",
//  addPowerfistPart("wristbottomright", "Wrist Bottom Right",
//  addPowerfistPart("wristtopleft", "Wrist Top Left",
//  addPowerfistPart("wristtopright", "Wrist Top Right",
//  "keybinding.powersuits.cycleToolBackward": "Cycle Tool Backward (MPS)",
//  add(MPSConstants.CYCLE_TOOL_FORWARD, "Cycle Tool Forward (MPS)",
//  add(MPSConstants.TOGGLE_MODULE, "Toggle %s",
//  addOBJModelPart(ARMOR2, "armglow", "Shoulder Light",
//  addOBJModelPart(ARMOR2, "armglow1", "Shoulder Light",
//  addOBJModelPart(ARMOR2, "armgray", "Arm Base",
//  addOBJModelPart(ARMOR2, "armgray1", "Arm Base",
//  addOBJModelPart(ARMOR2, "armmain", "Arm and Shoulder Protection",
//  addOBJModelPart(ARMOR2, "armmain1", "Arm and Shoulder Protection",
//  addOBJModelPart(ARMOR2, "bootglow", "Left Boot Glow",
//  addOBJModelPart(ARMOR2, "bootglow1", "Right Boot Glow",
//  addOBJModelPart(ARMOR2, "bootmain", "Left Boot",
//  addOBJModelPart(ARMOR2, "bootmain1", "Right Boot",
//  addOBJModelPart(ARMOR2, "chestback1", "Back Chest Protection",
//  addOBJModelPart(ARMOR2, "chestglowback", "Spinal Power Crystals",
//  addOBJModelPart(ARMOR2, "chestglowfront", "Front Power Crystal",
//  addOBJModelPart(ARMOR2, "chestgray", "Chest Base",
//  addOBJModelPart(ARMOR2, "chestmain", "Front Chest Protection",
//  addOBJModelPart(ARMOR2, "helmetglow1", "Helmet Tubes and Visor",
//  addOBJModelPart(ARMOR2, "helmetmain", "Helmet",
//  addOBJModelPart(ARMOR2, "legbit", "Left Leg Protection",
//  addOBJModelPart(ARMOR2, "legbit1", "Right Leg Protection",
//  addOBJModelPart(ARMOR2, "legglow", "Left Leg Light",
//  addOBJModelPart(ARMOR2, "legglow1", "Right Leg Light",
//  addOBJModelPart(ARMOR2, "leggray", "Left Leg Base",
// addOBJModelPart(ARMOR2, "leggray1", "Right Leg Base",
//  String ARMOR2 = addOBJModel("armor2", "Armor 2",
//  addOBJModelPart(JETPACK, "default","Main",
//  addOBJModelPart(JETPACK, "jetpack5", "Secondary",
//  addOBJModelPart(JETPACK, "jetpack_glow", "Lights",
//  String JETPACK = addOBJModel("jetpack", "MPS Jetpack",
//  addOBJModelPart(MPS_ARMS, "arms2", "Left Arm",
//  addOBJModelPart(MPS_ARMS, "arms3", "Right Arm",
//  addOBJModelPart(MPS_ARMS, "crystal_shoulder_1", "Left Shoulder Crystal",
//  addOBJModelPart(MPS_ARMS, "crystal_shoulder_2", "Right Shoulder Crystal",
//  String MPS_ARMS = addOBJModel("mps_arms", "MPS Arms",
//  addOBJModelPart(MPS_BOOTS, "boots1", "Right Boot",
//  "model.mps_boots.boots2.partName": "Left Boot",
//  String MPS_BOOTS = addOBJModel("mps_boots", "MPS Boots",
//  addOBJModelPart(MPS_CHEST, "backpack", "Backpack",
//  addOBJModelPart(MPS_CHEST, "belt", "Belt",
//  addOBJModelPart(MPS_CHEST, "chest_main", "Chest Plating",
//  addOBJModelPart(MPS_CHEST, "chest_padding", "Chest Padding",
//  addOBJModelPart(MPS_CHEST, "crystal_belt", "Belt Crystal",
//  String MPS_CHEST = addOBJModel("mps_chest", "MPS Chestplate",
//  addOBJModelPart(MPS_CHEST, "polySurface36",  "Accessory",
//  addOBJModelPart(MPS_HELM, "helm_main", "Helmet",
//  addOBJModelPart(MPS_HELM, "helm_tube_entry1", "Left Tube Entry",
//  addOBJModelPart(MPS_HELM, "helm_tube_entry2", "Right Tube Entry",
//  addOBJModelPart(MPS_HELM, "helm_tubes", "Tubes",
//  String MPS_HELM = addOBJModel("mps_helm", "MPS Helm",
//  addOBJModelPart(MPS_HELM, "visor", "Visor",
//  addOBJModelPart(MPS_PANTALOONS, "leg1",  "Right Leg",
//  addOBJModelPart(MPS_PANTALOONS, "leg2", "Left Leg",
//  String MPS_PANTALOONS = addOBJModel("mps_pantaloons", "MPS Pantaloons",
//  addTradeoff(MPSConstants.ACTIVATION_PERCENT, "Activation Percent",
//  addTradeoff(MPSConstants.ALPHA, "Alpha",
//  addTradeoff(MPSConstants.AMPERAGE, "Amperage",
//  addTradeoff(MPSConstants.ARMOR_VALUE_ENERGY, "Armor (Energy)",
//  addTradeoff(MPSConstants.ARMOR_ENERGY_CONSUMPTION, "Energy Per Damage",
//  addTradeoff(MPSConstants.ARMOR_VALUE_PHYSICAL, "Armor (Physical)",
//  "module.tradeoff.armorPoints": "Auto-Feeder Efficiency",
//  "module.tradeoff.blinkDriveRange": "Range",
//  addTradeoff(MPSConstants.BLUE, "Blue",
//  addTradeoff(MPSConstants.BLUE_HUE, "Lux Capacitor Blue Hue",
//  addTradeoff(MPSConstants.CARRY_THROUGH, "Carry-through",
//  addTradeoff(MPSConstants.COMPENSATION, "Compensation",
//  addTradeoff(MPSConstants.COOLING_BONUS, "Cooling Bonus",
//  addTradeoff(MPSConstants.ENERGY_GENERATION_DAY, "Daytime Energy Generation",
//  addTradeoff(MPSConstants.HEAT_GENERATION_DAY, "Daytime Heat Generation",
//  addTradeoff(MPSConstants.DIAMETER, "Diameter",
//  addTradeoff(MPSConstants.EFFICIENCY, "Efficiency",
//  addTradeoff(MPSConstants.ENCHANTMENT_LEVEL, "Enchantment Level",
//  addTradeoff(MPSConstants.ENERGY_CONSUMPTION, "Energy Consumption",
//  addTradeoff(MPSConstants.ENERGY_GENERATED, "Energy Generated",
//  addTradeoff(MPSConstants.ENERGY_GENERATION, "Energy Per Block Per Second",
//  addTradeoff(MPSConstants.FIELD_OF_VIEW, "FOV multiplier",
//  addTradeoff(MPSConstants.MODULE_FIELD_STRENGTH, "Field Strength",
//  addTradeoff(MPSConstants.FLUID_TANK_SIZE, "Tank Size",
//  addTradeoff(MPSConstants.FORTUNE_ENERGY_CONSUMPTION, "Fortune Energy Consumption",
//  addTradeoff(MPSConstants.FORTUNE_ENCHANTMENT_LEVEL, "Fortune Level",
//  addTradeoff(MPSConstants.GREEN, "Green",
//  addTradeoff(MPSConstants.GREEN_HUE, "Lux Capacitor Green Hue",
//  addTradeoff(MPSConstants.HARVEST_SPEED, "Harvest Speed",
// addTradeoff(MPSConstants.HARVEST_SPEED, "Harvest Speed",
//  addTradeoff(MPSConstants.HEAT_ACTIVATION_PERCENT, "Heat Activation Percent",
//  addTradeoff(MPSConstants.HEAT_EMISSION, "Heat Emission",
//  addTradeoff(MPSConstants.HEAT_GENERATION, "Heat Generation",
//  addTradeoff(MPSConstants.HEAT_GENERATION, "Heat Generation",
//  addTradeoff(MPSConstants.IMPACT, "Impact",
//  addTradeoff(MPSConstants.JETBOOTS_THRUST, "Jetboots Thrust",
//  addTradeoff(MPSConstants.JETPACK_THRUST, "Jetpack Thrust",
//  addTradeoff(MPSConstants.KNOCKBACK_RESISTANCE, "Knockback Resistance",
//  "module.tradeoff.maxHeat": "Maximum Heat",
//  addTradeoff(MPSConstants.PUNCH_DAMAGE, "Melee Damage",
//  addTradeoff(MPSConstants.PUNCH_KNOCKBACK, "Melee Knockback",
//  addTradeoff(MPSConstants.MOVEMENT_RESISTANCE, "Movement Resistance",
//  addTradeoff(MPSConstants.MULTIPLIER, "Multiplier",
//  addTradeoff(MPSConstants.ENERGY_GENERATION_NIGHT, "Nighttime Energy Generation",
//  addTradeoff(MPSConstants.HEAT_GENERATION_NIGHT, "Nighttime Heat Generation",
//  addTradeoff(MPSConstants.OPACITY, "Lux Capacitor Opacity",
//  addTradeoff(MPSConstants.OVERCLOCK, "Overclock",
// addTradeoff(MPSConstants.PLASMA_CANNON_DAMAGE_AT_FULL_CHARGE, "Plasma Damage At Full Charge",
//  addTradeoff(MPSConstants.PLASMA_CANNON_ENERGY_PER_TICK, "Plasma Energy Per Tick",
//  addTradeoff(MPSConstants.PLASMA_CANNON_EXPLOSIVENESS, "Plasma Explosiveness",
//   addTradeoff(MPSConstants.POWER, "Power",
//  addTradeoff(MPSConstants.RADIUS, "Radius",
//  addTradeoff(MPSConstants.RAILGUN_ENERGY_COST, "Railgun Energy Cost",
//  addTradeoff(MPSConstants.RAILGUN_HEAT_EMISSION, "Railgun Heat Emission",
//  addTradeoff(MPSConstants.RAILGUN_TOTAL_IMPULSE, "Railgun Total Impulse",
//  addTradeoff(MPSConstants.RANGE, "Range",
//  addTradeoff(MPSConstants.RED, "Red",
//  addTradeoff(MPSConstants.RED_HUE, "Lux Capacitor Red Hue",
//  addTradeoff(MPSConstants.SELECTIVE_MINER_LIMIT, "Block Limit",
//  addTradeoff(MPSConstants.SILK_TOUCH_ENERGY_CONSUMPTION, "Silk Touch Energy Consumption",
//  addTradeoff(MPSConstants.BLADE_DAMAGE, "Spinning Blade Damage",
//  addTradeoff(MPSConstants.SPRINT_ASSIST, "Sprint Assist",
//  addTradeoff(MPSConstants.SPRINT_ENERGY_CONSUMPTION, "Sprint Energy Consumption",
//  addTradeoff(MPSConstants.FOOD_COMPENSATION, "Sprint Exhaustion Compensation",
//  addTradeoff(MPSConstants.SPRINT_SPEED_MULTIPLIER, "Sprint Speed Multiplier",
//  addTradeoff(MPSConstants.THRUST, "Thrust",
//  addTradeoff(MPSConstants.SWIM_BOOST_AMOUNT, "Underwater Movement Boost",
//  addTradeoff(MPSConstants.VERTICALITY, "Verticality",
//  addTradeoff(MPSConstants.VOLTAGE, "Voltage",
//  addTradeoff(MPSConstants.WALKING_ASSISTANCE, "Walking Assist",
//  addTradeoff(MPSConstants.WALKING_ENERGY_CONSUMPTION, "Walking Energy Consumption",
//  addTradeoff(MPSConstants.WALKING_SPEED_MULTIPLIER, "Walking Speed Multiplier",
//  addTradeoff(MPSConstants.FLIGHT_VERTICALITY, "Y-look ratio"
//}